/* Опишите в этом файле все keyframes для проекта и стили анимаций иконки Like.

Будьте внимательны! Для корректной работы скриптов на этом сайте нужно, чтобы в HTML некоторые классы были названы особым образом:
✦ theme-dark — класс тёмной темы
✦ theme-light — класс светлой темы
✦ like-icon — для svg-иконки анимированного сердца
✦ card__like-button — для кнопки Like рядом с иконкой
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ is-liked — для обозначения состояния лайкнутой иконки в виде сердца
✦ button__text — для обозначения текстового элемента внутри кнопки

Кроме этого, не меняйте HTML переключателя тем. Его разметка также гарантирует работу своего скрипта.
*/

@keyframes menu-point {

  from {
    translate: 0;
  }

  to {
    translate: -4px;
  }
}

@keyframes heart-isliked-scaling {

  0% {
    scale: 1;
  }

  100% {
    scale: 1.5;
  }
}

@keyframes heart-sparks {

  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

@keyframes image-rotate {

  from {
    rotate: x 0;
  }

  to {
    rotate: x 360deg;
  }
}

@keyframes image-scaling {

  from {
    scale: 1;
  }

  to {
    scale: 1.03;
  }
}

@keyframes tap-scaling {

  from {
    scale: 1;
  }

  to {
    scale: 1.3;
  }
}

@keyframes sparks {

  0% {
    opacity: 0;
  }

  50% {
    opacity: 1;
  }

  100% {
    opacity: 1;
  }
}

.like-icon {
  display: block;
  inline-size: 37px;
  block-size: 34px;
}

.like-icon .contour {
  --heart-transition: fill .1s linear;

  fill: var(--heart-contour);
  transition: var(--heart-transition);
}

.like-icon .main-body {
  fill: transparent;
  transition: var(--heart-transition);
}

.like-icon .core {
  --heart-transition-delayed: fill .3s .03s linear;

  fill: transparent;
  transition: var(--heart-transition-delayed);
}

.like-icon .sparks {
  fill: var(--heart-main-color);
  opacity: 0;
}

.like-icon:hover .core {
  fill: var(--heart-contour);
  transition: var(--heart-transition);
}

.like-icon:hover .main-body {
  fill: var(--heart-contour);
  transition: var(--heart-transition-delayed);
}

.like-icon:active .core {
  fill: var(--heart-main-color);
  transition: var(--heart-transition);
}

.like-icon:active .main-body {
  fill: var(--heart-main-color);
  transition: var(--heart-transition-delayed);
}

.like-icon.is-liked .contour {
  --heart-transition-delayed: fill .3s .06s linear;

  fill: var(--heart-main-color);
  transition: var(--heart-transition-delayed);
}

.like-icon.is-liked .main-body {
  fill: var(--heart-main-color);
  transition: var(--heart-transition-delayed);
}

.like-icon.is-liked .core {
  fill: var(--heart-main-color);
  transition: var(--heart-transition);
}

.like-icon.is-liked {
  animation: heart-isliked-scaling 2 .3s .1s ease-in alternate;
  transform-origin: center;
}

.like-icon.is-liked .sparks {
  animation: heart-sparks 2 .3s .3s ease-in alternate;
}

.card__image-container:hover .card__image {
  animation: image-rotate 1s linear forwards,
             image-scaling 2 .5s 1s linear alternate;
}

 .tap-icon {
  inline-size: 30px;
  block-size: 30px;
  position: absolute;
  right: 3.5%;
  bottom: 25px;
  transform: rotate(-30deg);
  filter: contrast(1.9);
  filter: opacity(0.65);
}

.tap {
  fill: var(--main-color);
  stroke:var(--bg-color);
}

.tap-sparks {
  stroke: var(--main-color);
}
 
.card__image-container:not(:hover) .tap-icon {
  animation: tap-scaling .5s alternate infinite;
  transform-origin: center;
}

.card__image-container:not(:hover) .tap-sparks {
  animation: sparks 1s -2s infinite;
}

.card__image-container:hover .tap-icon {
  display: none;
}

@media (prefers-reduced-motion: reduce) {
  .like-icon.is-liked .heart,
  .like-icon.is-liked .sparks,
  .card__image-container:hover .card__image,
  .card__image-container:hover .tap-icon,
  .card__image-container:hover .tap-sparks {
    animation: none;
  }
}